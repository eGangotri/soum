openapi: 3.0.0
info:
  title: Soum APIs
  description: Optional multiline or single-line description in HTML.
  version: 0.1.9
servers:
  - url: http://localhost:6969
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /getCategory:
    get:
      summary: Returns a list of categories.
      description: REST API and a GraphQL API to GET category list. If the parent_id is given it should return only the child categories.
      # operationId: "findPetsByStatus"
      produces:
      - "application/json"
      parameters:
      - name: "parent_id"
        in: "query"
        description: "parent_id"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
        "400":
          description: "Invalid status value"
  /getProduct:
    get:
      summary: Returns a list of products.
      description: REST API and a GraphQL API to get a list of products by state and transfer the state
      produces:
      - "application/json"
      parameters:
      - name: "state"
        in: "query"
        description: "state"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        "400":
          description: "Invalid status value"
                  
  /updateProductState:
    post:
      summary: API for handling the product state changes.
      description:  Proper exceptions should be thrown if there is an attempt to make invalid states. (e.g. draftProduct->sold() should not be allowed)
      requestBody:
        description: update state
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductState'
        responses:
        "200":
          description: "successful operation"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: "Invalid status value"
components:
  schemas:
    Category:
      type: array
      items:
        type: object
        properties:
          category_id:
            type: integer
            format: int64
          parent_id:
            type: integer
            format: int64
          category_name:
            type: string
      required:
        - category_id
        - category_name
    Product:
      type: array
      items:
        type: object
        properties:
          product_id:
            type: integer
            format: int64
          category_id:
            type: integer
            format: int64
          product_price:
            type: number
            format: double
          product_image:
            type: array
            items:
              type: string
          product_name:
            type: string
          state:
            type: string
      required:
        - category_id
        - category_name
    UpdateProductState:
      title: product state update
      type: object
      properties:
        stateFrom:
          type: string
          description: stateFrom
        stateTo:
          type: string
          description: stateTo
        productId:
          type: integer
          format: int64
          description: productId
      required:
        - stateFrom
        - stateTo
        - productId



